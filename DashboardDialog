<!DOCTYPE html>
<html>
<head>
  <base target="_top">
  <style>
    body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif; margin: 0; background-color: #f0f2f5; color: #333; }
    .container { padding: 20px; }
    h1 { color: #1c1e21; }
    .grid-container {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
      grid-gap: 20px;
    }
    .card {
      background-color: white;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    .kpi-card { text-align: center; }
    .kpi-card h3 { margin: 0 0 10px 0; font-size: 14px; color: #606770; text-transform: uppercase; }
    .kpi-card .value { font-size: 32px; font-weight: 700; color: #1877f2; }
    #actions-card { grid-column: 1 / -1; }
    .actions-grid { display: grid; grid-template-columns: 1fr 1fr; grid-gap: 15px; }
    .table-card { grid-column: span 2; }
    #chart-card { grid-column: span 2; min-height: 300px;}

    h2 { border-bottom: 1px solid #ddd; padding-bottom: 10px; font-size: 18px; }
    table { width: 100%; border-collapse: collapse; }
    th, td { padding: 10px 5px; text-align: left; border-bottom: 1px solid #eee; }
    th { font-weight: bold; font-size: 12px; color: #606770; }
    td { font-size: 14px; }

    .action-button {
      display: block; width: 100%; padding: 12px; margin-bottom: 10px; font-size: 14px;
      font-weight: bold; border-radius: 5px; border: none; cursor: pointer; text-align: left;
      transition: background-color 0.2s;
    }
    .action-button:disabled { background-color: #dcdfe3 !important; color: #bec3c9 !important; cursor: not-allowed;}
    #import-btn { background-color: #0d6efd; color: white; }
    #clean-btn { background-color: #dc3545; color: white; }
    #refresh-btn { background-color: #198754; color: white; }
    #packaging-btn, #acq-btn, #notify-btn { background-color: #6c757d; color: white; }
    #status-log { font-size: 12px; font-style: italic; color: #606770; margin-top: 15px; min-height: 18px;}
  </style>
  <script type="text/javascript" src="https://www.google.com/jsapi"></script>
</head>
<body>
  <div class="container">
    <h1>Dashboard de Operaciones</h1>
    <div class="grid-container">

      <div class="card kpi-card"><h3>Venta Total</h3><div id="kpi-sales-value" class="value">--</div></div>
      <div class="card kpi-card"><h3>N¬∫ Pedidos</h3><div id="kpi-orders-value" class="value">--</div></div>
      <div class="card kpi-card"><h3>Costo Total</h3><div id="kpi-costs-value" class="value">--</div></div>
      <div class="card kpi-card"><h3>Margen (%)</h3><div id="kpi-margin-value" class="value">--%</div></div>

      <div id="actions-card" class="card">
        <h2>Flujo de Trabajo Diario</h2>
        <div class="actions-grid">
            <div>
                <p><strong>Paso 1:</strong> Carga los pedidos del d√≠a.</p>
                <button id="import-btn" class="action-button">Importar Pedidos (.xlsx)</button>
                <p><strong>Paso 2:</strong> Revisa y limpia los datos.</p>
                <button id="clean-btn" class="action-button">Limpiar Datos (Duplicados y Proveedores)</button>
                <p><strong>Paso 3:</strong> Carga las m√©tricas en el dashboard.</p>
                <button id="refresh-btn" class="action-button">Cargar M√©tricas del Dashboard</button>
            </div>
            <div>
                <p><strong>Acciones de Operaci√≥n:</strong></p>
                <button id="packaging-btn" class="action-button">‚ñ∂Ô∏è Iniciar Proceso de Envasado</button>
                <button id="acq-btn" class="action-button">üìù Generar Borrador de Adquisiciones</button>
                <button id="notify-btn" class="action-button">üì≤ Notificar a Proveedores</button>
                <button id="finance-btn" class="action-button" style="background-color: #ffc107; color: black;">üí≤ Gestionar Finanzas</button>
            </div>
        </div>
        <div id="status-log">Bienvenido. Importa los pedidos para comenzar.</div>
      </div>

      <div class="card table-card">
        <h2>Top 5 Productos Vendidos</h2>
        <table id="top-products-table">
          <thead><tr><th>Producto</th><th>Cantidad</th></tr></thead>
          <tbody><tr><td colspan="2">Carga las m√©tricas para ver.</td></tr></tbody>
        </table>
      </div>

      <div id="chart-card" class="card">
        <h2>Distribuci√≥n por Comuna</h2>
        <div id="chart-div" style="width: 100%; height: 100%;"></div>
      </div>
    </div>
  </div>

  <script>
    let pickerApiLoaded = false;
    let oauthToken;
    const statusLog = document.getElementById('status-log');
    const allButtons = document.querySelectorAll('.action-button');

    function setLoadingState(isLoading, message = '') {
        statusLog.textContent = message;
        allButtons.forEach(btn => btn.disabled = isLoading);
    }

    window.onload = function() {
      google.script.run.withSuccessHandler(token => {
        oauthToken = token;
        gapi.load('picker', { 'callback': () => { pickerApiLoaded = true; } });
      }).getOAuthToken();
      google.charts.load('current', {packages:['corechart']});
    };

    document.getElementById('import-btn').addEventListener('click', showPicker);
    document.getElementById('clean-btn').addEventListener('click', () => {
        setLoadingState(true, 'Iniciando limpieza de datos...');
        google.script.run.withSuccessHandler(handleSuccess).withFailureHandler(handleError).startDashboardRefresh();
    });
    document.getElementById('refresh-btn').addEventListener('click', () => {
        setLoadingState(true, 'Cargando m√©tricas...');
        google.script.run.withSuccessHandler(populateUI).withFailureHandler(handleError).getDashboardMetrics();
    });
    document.getElementById('packaging-btn').addEventListener('click', () => google.script.run.startPackagingProcess());
    document.getElementById('acq-btn').addEventListener('click', () => {
        setLoadingState(true, 'Generando borrador y abriendo editor...');
        google.script.run.withSuccessHandler(() => setLoadingState(false)).withFailureHandler(handleError).showAcquisitionEditor();
    });
    document.getElementById('notify-btn').addEventListener('click', () => google.script.run.startNotificationProcess());
    document.getElementById('finance-btn').addEventListener('click', () => google.script.run.showFinanceDashboard());

    function showPicker() {
      if (!pickerApiLoaded || !oauthToken) { return alert('La API del selector de archivos a√∫n no est√° lista. Int√©ntalo de nuevo en unos segundos.'); }
      const view = new google.picker.View(google.picker.ViewId.DOCS);
      view.setMimeTypes("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
      const picker = new google.picker.PickerBuilder().enableFeature(google.picker.Feature.NAV_HIDDEN).setAppId(google.script.googleapp.getAppId()).setOAuthToken(oauthToken).addView(view).setCallback(pickerCallback).build();
      picker.setVisible(true);
    }

    function pickerCallback(data) {
      if (data[google.picker.Action.PICKED]) {
        const fileId = data[google.picker.Response.DOCUMENTS][0][google.picker.Document.ID];
        setLoadingState(true, `Archivo seleccionado. Importando...`);
        google.script.run.withSuccessHandler(handleSuccess).withFailureHandler(handleError).importOrdersFromXLSX(fileId);
      }
    }

    function handleSuccess(message) {
        setLoadingState(false, message);
        alert(message);
    }

    function handleError(err) {
       setLoadingState(false, `Error: ${err.message}`);
       alert(`Error: ${err.message}`);
    }

    function populateUI(metrics) {
      setLoadingState(false, 'Dashboard actualizado.');
      document.getElementById('kpi-sales-value').textContent = `$${metrics.totalSales.toLocaleString('es-CL')}`;
      document.getElementById('kpi-orders-value').textContent = metrics.orderCount;
      document.getElementById('kpi-costs-value').textContent = `$${metrics.totalCosts.toLocaleString('es-CL')}`;
      document.getElementById('kpi-margin-value').textContent = `${metrics.marginPercentage.toFixed(1)}%`;

      const topProductsBody = document.querySelector("#top-products-table tbody");
      topProductsBody.innerHTML = metrics.topSoldProducts.map(p => `<tr><td>${p[0]}</td><td>${p[1]}</td></tr>`).join('') || `<tr><td colspan="2">No hay datos.</td></tr>`;

      const communesBody = document.querySelector("#communes-table tbody");
      communesBody.innerHTML = metrics.communeDistribution.map(c => `<tr><td>${c[0]}</td><td>${c[1]}</td></tr>`).join('') || `<tr><td colspan="2">No hay datos.</td></tr>`;

      drawChart(metrics.communeDistribution);
    }

    function drawChart(communeData) {
        const chartDiv = document.getElementById('chart-div');
        if (communeData.length === 0) {
            chartDiv.innerHTML = 'No hay datos para el gr√°fico.';
            return;
        }
        const dataForChart = [['Comuna', 'Pedidos'], ...communeData];
        const data = google.visualization.arrayToDataTable(dataForChart);
        const options = { title: 'Distribuci√≥n de Pedidos por Comuna', pieHole: 0.4, legend: {position: 'bottom'} };
        const chart = new google.visualization.PieChart(chartDiv);
        chart.draw(data, options);
    }
  </script>
</body>
</html>
